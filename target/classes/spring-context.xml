<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
       
    
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	   	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://172.16.60.45/love_light?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="root" />
		<property name="password" value="zxc123456"/>
	</bean>
	   

	<!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
         -->
         <property name="configuration">
         	<bean class="org.apache.ibatis.session.Configuration">
         		<!-- 驼峰命名 -->
         		<property name="mapUnderscoreToCamelCase" value="true" />
         		<!-- 自增长 -->
         		<property name="useGeneratedKeys" value="true" />
         	</bean>
         </property>
        
        <property name="typeAliasesPackage" value="com.loveLight.entity" />
        <property name="mapperLocations" value="classpath:com/loveLight/mapper/*.xml" />
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描com.loveLight.mapper这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.loveLight.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    
    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- 开启Annotation -->
    <context:annotation-config/>
    
    <!-- 让Spring通过自动扫描来查询和管理Bean -->
    <context:component-scan base-package="com.loveLight">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    
    
	<!-- 事务管理配置,对应于service层的方法  不建议使用 -->
	<!-- 
    
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	        <tx:method name="add*" propagation="REQUIRED" />
	        <tx:method name="update*" propagation="REQUIRED" />
	        <tx:method name="delete*" propagation="REQUIRED" />
	        <tx:method name="*" read-only="true" />
	    </tx:attributes>
	</tx:advice>
	
	
	<aop:config>
	    <aop:pointcut id="allServiceMethod" expression="execution(* cn.edu.uestc.ssm.services.impl..*.*(..))" />
	    <aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>
	 -->
	
	
  
</beans>